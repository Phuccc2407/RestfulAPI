// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestfulAPI.Repos;

#nullable disable

namespace RestfulAPI.Migrations
{
    [DbContext(typeof(LearndataContext))]
    [Migration("20251026130250_anothertracksupdate")]
    partial class anothertracksupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Album", b =>
                {
                    b.Property<string>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ArtistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoverUrl")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("AlbumId")
                        .HasName("PK__Albums__97B4BE37BF04CD91");

                    b.HasIndex("ArtistId");

                    b.HasIndex("LabelId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Artist", b =>
                {
                    b.Property<string>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ArtistImageUrl")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ArtistId")
                        .HasName("PK__Artists__25706B50ADD40E33");

                    b.HasIndex("UserId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.AuditLog", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AuditId"));

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EntityId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("PerformedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("PerformedBy")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuditId")
                        .HasName("PK__AuditLog__A17F2398F5B3673B");

                    b.HasIndex("PerformedBy");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Follow", b =>
                {
                    b.Property<long>("FollowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FollowId"));

                    b.Property<DateTime?>("FollowedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("FolloweeArtistId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FolloweeUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FollowerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FollowId")
                        .HasName("PK__Follows__2CE810AE40DC9507");

                    b.HasIndex("FolloweeArtistId");

                    b.HasIndex("FolloweeUserId");

                    b.HasIndex("FollowerId");

                    b.ToTable("Follows");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GenreId")
                        .HasName("PK__Genres__0385057E0B602F56");

                    b.HasIndex(new[] { "Name" }, "UQ__Genres__737584F6D4D38D44")
                        .IsUnique();

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Label", b =>
                {
                    b.Property<int>("LabelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LabelId"));

                    b.Property<string>("LabelName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LabelId")
                        .HasName("PK__Labels__397E2BC3B9882E42");

                    b.HasIndex(new[] { "LabelName" }, "UQ__Labels__6AD93A5464275C53")
                        .IsUnique();

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Payment", b =>
                {
                    b.Property<long>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Provider")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A38727CDAFC");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Playlist", b =>
                {
                    b.Property<string>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<bool?>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("OwnerUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("PlaylistId")
                        .HasName("PK__Playlist__B30167A0FD82F77C");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.PlaylistItem", b =>
                {
                    b.Property<long>("PlaylistItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PlaylistItemId"));

                    b.Property<DateTime?>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("PlaylistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("TrackId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PlaylistItemId")
                        .HasName("PK__Playlist__1910CEADF01446AF");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("TrackId");

                    b.ToTable("PlaylistItems");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.RefreshToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken1")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("RefreshToken");

                    b.Property<string>("TokenId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.StreamHistory", b =>
                {
                    b.Property<long>("StreamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StreamId"));

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DurationPlayedSeconds")
                        .HasColumnType("int");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("TrackId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StreamId")
                        .HasName("PK__StreamHi__07C87A929CDEFD37");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserId");

                    b.ToTable("StreamHistory");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Subscription", b =>
                {
                    b.Property<long>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SubscriptionId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SubscriptionId")
                        .HasName("PK__Subscrip__9A2B249D334785FF");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Track", b =>
                {
                    b.Property<string>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Bitrate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("int");

                    b.Property<bool?>("Explicit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TrackImageUrl")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("TrackId")
                        .HasName("PK__Tracks__7A74F8E05D1F6F84");

                    b.HasIndex("AlbumId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.TrackArtist", b =>
                {
                    b.Property<string>("TrackId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtistId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TrackId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("TrackArtists", (string)null);
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.TrackCategory", b =>
                {
                    b.Property<string>("TrackId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("TrackId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TrackCategories", (string)null);
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.TrackGenre", b =>
                {
                    b.Property<string>("TrackId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("TrackId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("TrackGenres", (string)null);
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.TrackLike", b =>
                {
                    b.Property<string>("TrackId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LikedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.HasKey("TrackId", "UserId")
                        .HasName("PK__TrackLik__AB0C74247035CAF8");

                    b.HasIndex("UserId");

                    b.ToTable("TrackLikes");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestfulAPI.Repos.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Album", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK__Albums__ArtistId__66603565");

                    b.HasOne("RestfulAPI.Repos.Models.Label", "Label")
                        .WithMany("Albums")
                        .HasForeignKey("LabelId")
                        .HasConstraintName("FK__Albums__LabelId__6754599E");

                    b.Navigation("Artist");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Artist", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.User", "User")
                        .WithMany("Artists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Artists__UserId__5BE2A6F2");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.AuditLog", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.User", "PerformedByNavigation")
                        .WithMany("AuditLogs")
                        .HasForeignKey("PerformedBy")
                        .HasConstraintName("FK__AuditLogs__Perfo__17036CC0");

                    b.Navigation("PerformedByNavigation");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Follow", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Artist", "FolloweeArtist")
                        .WithMany("Follows")
                        .HasForeignKey("FolloweeArtistId")
                        .HasConstraintName("FK__Follows__Followe__05D8E0BE");

                    b.HasOne("RestfulAPI.Repos.Models.User", "FolloweeUser")
                        .WithMany("FollowFolloweeUsers")
                        .HasForeignKey("FolloweeUserId")
                        .HasConstraintName("FK__Follows__Followe__06CD04F7");

                    b.HasOne("RestfulAPI.Repos.Models.User", "Follower")
                        .WithMany("FollowFollowers")
                        .HasForeignKey("FollowerId")
                        .IsRequired()
                        .HasConstraintName("FK__Follows__Followe__04E4BC85");

                    b.Navigation("FolloweeArtist");

                    b.Navigation("FolloweeUser");

                    b.Navigation("Follower");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Payment", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__UserId__1332DBDC");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Playlist", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.User", "OwnerUser")
                        .WithMany("Playlists")
                        .HasForeignKey("OwnerUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Playlists__Owner__778AC167");

                    b.Navigation("OwnerUser");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.PlaylistItem", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Playlist", "Playlist")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("PlaylistId")
                        .IsRequired()
                        .HasConstraintName("FK__PlaylistI__Playl__7B5B524B");

                    b.HasOne("RestfulAPI.Repos.Models.Track", "Track")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__PlaylistI__Track__7C4F7684");

                    b.Navigation("Playlist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.StreamHistory", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Track", "Track")
                        .WithMany("StreamHistories")
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__StreamHis__Track__0A9D95DB");

                    b.HasOne("RestfulAPI.Repos.Models.User", "User")
                        .WithMany("StreamHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__StreamHis__UserI__0B91BA14");

                    b.Navigation("Track");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Subscription", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Subscript__UserI__0F624AF8");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Track", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .HasConstraintName("FK__Tracks__AlbumId__6D0D32F4");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.TrackArtist", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Artist", "Artist")
                        .WithMany("TrackArtists")
                        .HasForeignKey("ArtistId")
                        .IsRequired();

                    b.HasOne("RestfulAPI.Repos.Models.Track", "Track")
                        .WithMany("TrackArtists")
                        .HasForeignKey("TrackId")
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.TrackCategory", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Category", "Category")
                        .WithMany("TrackCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired();

                    b.HasOne("RestfulAPI.Repos.Models.Track", "Track")
                        .WithMany("TrackCategories")
                        .HasForeignKey("TrackId")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.TrackGenre", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Genre", "Genre")
                        .WithMany("TrackGenres")
                        .HasForeignKey("GenreId")
                        .IsRequired();

                    b.HasOne("RestfulAPI.Repos.Models.Track", "Track")
                        .WithMany("TrackGenres")
                        .HasForeignKey("TrackId")
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.TrackLike", b =>
                {
                    b.HasOne("RestfulAPI.Repos.Models.Track", "Track")
                        .WithMany("TrackLikes")
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__TrackLike__Track__00200768");

                    b.HasOne("RestfulAPI.Repos.Models.User", "User")
                        .WithMany("TrackLikes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TrackLike__UserI__01142BA1");

                    b.Navigation("Track");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Artist", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Follows");

                    b.Navigation("TrackArtists");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Category", b =>
                {
                    b.Navigation("TrackCategories");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Genre", b =>
                {
                    b.Navigation("TrackGenres");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Label", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.Track", b =>
                {
                    b.Navigation("PlaylistItems");

                    b.Navigation("StreamHistories");

                    b.Navigation("TrackArtists");

                    b.Navigation("TrackCategories");

                    b.Navigation("TrackGenres");

                    b.Navigation("TrackLikes");
                });

            modelBuilder.Entity("RestfulAPI.Repos.Models.User", b =>
                {
                    b.Navigation("Artists");

                    b.Navigation("AuditLogs");

                    b.Navigation("FollowFolloweeUsers");

                    b.Navigation("FollowFollowers");

                    b.Navigation("Payments");

                    b.Navigation("Playlists");

                    b.Navigation("StreamHistories");

                    b.Navigation("Subscriptions");

                    b.Navigation("TrackLikes");
                });
#pragma warning restore 612, 618
        }
    }
}
